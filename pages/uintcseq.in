<title>The UINT Collating Sequence</title>
<tcl>hd_keywords {UINT collating sequence} {UINT}</tcl>

<fancy_format>

<h1>Overview</h1>

<p> The UINT collating sequences is a [loadable extension] for
SQLite that implements a new collating sequence that compares text
containing unsigned integers in numeric order.

<p> The UINT collating sequence is not a standard part of SQLite.
It must be loaded as a separate extension.  The source code to
UINT is in the [https://sqlite.org/src/file/ext/misc/uint.c|uint.c source file]
in the [https://sqlite.org/src/file/ext/misc|ext/misc/ folder] of the
SQLite source tree.

<p> The UINT collating sequence is not included in standard builds of
the SQLite library, but it is loaded by default in the [CLI].  This
is typical of the [CLI] which loads various extensions above and beyond
what are available in the standard SQLite library.

<p> The UINT collating sequence works just like the default
BINARY collating sequence for text, except that embedded strings
of digits compare in numeric order.

<ul>
<li><p>
Leading zeros are handled properly, in the sense that
they do not mess of the maginitude comparison of embedded
strings of digits.  "x00123y" is equal to "x123y".

<li><p>
Only unsigned integers are recognized.  Plus and minus
signs are ignored.  Decimal points and exponential notation
are ignored.

<li><p>
Embedded integers can be of arbitrary length.  Comparison
is not limited to integers that can be expressed as a
64-bit machine integer.
</ul>

<h1>Example:</h1>

<blockquote>
<table border="1" cellspacing="0" cellpadding="10">
<tr><th>COLLATE binary<th>COLLATE uint</tr>
<tr><td valign="top" align="left"><pre>
'0000123457'
'123456'
'abc0000000010xyz'
'abc0010xyy'
'abc10xzz'
'abc674xyz'
'abc87xyz'
'abc9xyz'</pre></td>
<td valign="top" align="left"><pre>
'123456'
'0000123457'
'abc9xyz'
'abc0010xyy'
'abc0000000010xyz'
'abc10xzz'
'abc87xyz'
'abc674xyz'</pre></td>
</table>
</blockquote>
